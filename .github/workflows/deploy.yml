name: Build and Deploy WebGL

on:
  push:

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2021_1 }}

jobs:
  buildAndDeploy:
    name: Build and Deploy for ${{ matrix.platform }} on version ${{ matrix.unityVersion }}
    runs-on: Ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.1.19f1
        targetPlatform:
          - WebGL # WebGL.

    steps:
      - uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Cache Library Folder
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.platform }}-${{ hashFiles('Packages/manifest.json') }}-v.1.0
          restore-keys: |
            Library-${{ matrix.platform }}-

      - name: Cache git lfs
        uses: actions/cache@v2
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1.2
          # use previous cache if current one is not found
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Pull lfs data, if not cached
        run: git lfs pull

      # Build the game deployment at build
      - uses: game-ci/unity-builder@v2.0-alpha-6
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: ScriptBatch.OfficialBuild_WebGL

      - name: run test list command
        run: echo 'hello world'
      
      - name: run test list command 2
        run: find .
      

      # Deploy build to gh-pages branch
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: build/${{ matrix.targetPlatform }}/${{ matrix.targetPlatform }}
          SQUASH_HISTORY: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
